{
    "post": [
      {
        "id": 1,
        "title": "[CODE MUSIC BOT FOR DISCORD] - Phần 3: Lập trình các tính năng",
        "author": {
          "name": "John Doe",
          "gen": "Gen Z",
          "image": "https://demoda.vn/wp-content/uploads/2022/03/anh-cute-meo-le-luoi.jpg"
        },
        "featureImage": "https://usth-coders-club.github.io/assets/images/posts/2022-05-06-discord-music-bot-3/banner.jpg",
        "date": "5 October 2024",
        "summary": [
          { 
            "title": "Cấu trúc hoạt động của Bot",
            "content": [
              {
                "type": "paragraph",
                "text": "Con Bot của chúng ta sẽ có những lệnh cơ bản của một Bot chơi nhạc:"
              },
              {
                "type": "commandList",
                "commands": [
                  "play: Chơi một bài nhạc",
                  "pause: Tạm dừng nhạc",
                  "resume: Tiếp tục chơi nhạc",
                  "back: Quay về bài trước",
                  "skip: Bỏ qua bài nhạc đang chơi",
                  "nowplaying: Thông tin về bài nhạc đang được chơi",
                  "queue: Danh sách các bài nhạc đã được đăng ký",
                  "stop: Dừng chơi nhạc"
                ]
              },
              {
                "type": "paragraph",
                "text": "Với rất nhiều lệnh như vậy, chúng ta cần một “trung tâm điều khiển” để có thể xử lý. Mình sẽ gọi file này là handler.js. Nhiệm vụ của file này là phát hiện khi người dùng muốn ra lệnh nào đó cho Bot, sau đó xử lý tin nhắn họ gửi đến rồi chạy lệnh tương ứng. Con Bot của chúng ta sẽ hoạt động theo mô hình như sau:"
              },
              {
                "type": "image",
                "src": "https://usth-coders-club.github.io/assets/images/posts/2022-05-06-discord-music-bot-3/Untitled_Diagram.drawio.png",
                "alt": "1"
              },
              {
                "type": "paragraph",
                "text": "Object message được Discord trả về khi kích hoạt event “messageCreate” sẽ được truyền vào file handler.js. Tại đây, chúng ta sẽ phân biệt xem tin nhắn được gửi đến có phải một lệnh hợp lệ hay không, sau đó chuyển tách tên lệnh và argument rồi truyền xuống file tính năng tương ứng để xử lý. Ví dụ cho dễ hiểu, giả sử bạn gửi một tin nhắn có nội dung “!play Lâu đài tình ái”, handler.js sẽ nhận ra tin nhắn này bắt đầu bằng dấu “!” (PREFIX) báo hiệu cho bot chuẩn bị xử lý, sau đó file này sẽ tách tin nhắn ra làm hai phần: phần command là “play” và phần argument là “Lâu đài tình ái”, rồi nó sẽ truyền argument này vào file play.js."
              },
              {
                "type": "paragraph",
                "text": "Do vậy PREFIX khá quan trọng. Nó giúp con Bot của chúng ta phân biệt những tin nhắn cần xử lý và những tin nhắn nào không. Các bạn hãy thêm một dòng khai báo PREFIX vào file .env nhé. Ở đây mình dùng dấu chấm than !, các bạn có thể sử dụng dấu gì cũng được:"
              },
              {
                "type": "image",
                "src": "https://usth-coders-club.github.io/assets/images/posts/2022-05-06-discord-music-bot-3/Untitled.png",
                "alt": "2"
              }
            ]
          },
          { "title": "handlers.js",
            "content": [
              {
                "type": "paragraph",
                "text": "Như đã đề cập, file này sẽ xử lý tin nhắn đầu vào từ người dùng gửi đến server. Các bạn hãy tạo một folder là handler và cho vào đó một file handler.js nhé:"
              },
              {
                "type": "image",
                "src": "https://usth-coders-club.github.io/assets/images/posts/2022-05-06-discord-music-bot-3/Untitled%201.png",
                "alt": "3"
              },
              {
                "type":"paragraph",
                "text": "Ở đây chúng ta sẽ cần đến biến PREFIX ở file .env, nên các bạn hãy khai báo sử dụng module dotenv nhé:"
              }
            ]
        
          
        
          },
          { "title": "play.js"},
          { "title": "pause.js"},
          { "title": "resume.js"},
          { "title": "skip.js"},
          { "title": "back.js"},
          { "title": "stop.js"},
          { "title": "nowplaying.js"},
          { "title": "queue.js"},
          { "title": "Tổng kết"}],


        "content": "Ở Phần 2, UCC đã cùng các bạn đăng ký tài khoản Bot với Discord và đăng nhập vào nó bằng Javascript. Trong bài viết này, mình sẽ hướng dẫn các bạn lập trình đầy đủ các tính năng để con Bot của chúng ta chạy được nhạc nhé!"
      }
    ]
  }